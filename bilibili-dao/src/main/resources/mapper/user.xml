<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD MAPPER 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.immoc.bilibili.dao.UserDao">

    <select id="getUserByPhone" parameterType="java.lang.String" resultType="com.immoc.bilibili.dao.domain.User">
        select
                *
        from
            bilibili.t_user
        where
            phone = #{phone}
    </select>

    <insert id = "addUser" parameterType="com.immoc.bilibili.dao.domain.User" useGeneratedKeys="true" keyProperty="id">
        insert into
            bilibili.t_user( phone, email, password, salt, createTime )
        values (
            #{phone},
            #{email},
            #{password},
            #{salt},
            #{createTime}
        )
    </insert>
    <insert id = "addUserInfo" parameterType="com.immoc.bilibili.dao.domain.UserInfo">
        insert into
            bilibili.t_user_info(id, userId, nick, avatar, sign, gender, birth, createTime, updateTime)
        values (
                   #{id},
                   #{userId},
                   #{nick},
                   #{avatar},
                   #{sign},
                    #{gender},
                #{birth},
                #{createTime},
                #{updateTime}
               )
    </insert>
    <select id="getUserById" parameterType="java.lang.Long" resultType="com.immoc.bilibili.dao.domain.User">
        select *
        from bilibili.t_user
        where id = #{id}
    </select>
    <select id="getUserInfoByUserId" parameterType="java.lang.Long" resultType="com.immoc.bilibili.dao.domain.UserInfo">
        select *
        from bilibili.t_user_info
        where userId = #{userId}
    </select>
    <update id="updateUsers" parameterType="com.immoc.bilibili.dao.domain.User" >
        update bilibili.t_user set
        <if test="phone!=null and phone != '' "> phone = #{phone}</if>
        <if test="email!=null and email != '' "> email = #{email}</if>
        <if test="password != null and password != '' "> password = #{password} </if>
        updateTime = #{updateTime} where id = #{id}
    </update>
    <update id="updateUserInfos" parameterType="com.immoc.bilibili.dao.domain.UserInfo">
        update bilibili.t_user_info set
        <if test="nick!=null and nick != '' "> nick = #{nick}</if>
        <if test="avatar!=null and avatar != '' "> avatar = #{avatar}</if>
        <if test="sign != null and sign != '' "> sign = #{sign} </if>
        <if test="birth!=null and birth != '' "> avatar = #{avatar}</if>
        <if test="sign != null and sign != '' "> sign = #{sign} </if>
        updateTime = #{updateTime} where id = #{id}
        where
            id = #{id}
    </update>

    <select id="getUserInfoByUserIds" resultType="com.immoc.bilibili.dao.domain.UserInfo">
        select
            *
        from
            bilibili.t_user_info
        where
            1 = 1
            <if test = "userIdList != null and userIdList.size > 0">
                and userId in
                <foreach collection="userIdList" item="userId" index="index" open="(" close=")" separator=",">
                    #{userId}
                </foreach>
            </if>
    </select>
    
    <select id="pageCountUserInfos" parameterType="java.util.Map" resultType="java.lang.Integer">
        select
            count(1)
        from
            bilibili.t_user_info
        where
            1=1
        <if test="nick != null and nick != '' ">
            and nick like '%${nick}%'
        </if>
    </select>

    <select id="pageListUserInfos" parameterType="java.util.Map" resultType="com.immoc.bilibili.dao.domain.UserInfo">
        select
            count(1)
        from
            bilibili.t_user_info
        where
            1= 1
            <if test="nick != null and nick != '' ">
                 and nick like '%${nick}%'
             </if>
        order by id desc
        limit #{start}, #{limit}
    </select>
    <delete id="deleteRefreshToken">
        delete from
                t_refresh_token
        where
            refreshToken = #{refreshToken}
    </delete>
    <insert id="addRefreshToken">
        insert into
            t_refresh_token(
                            userId, refreshToken, createTime
        ) values(
                 #{userId}, #{refreshToken}, #{createTime}
                        )
    </insert>
    <select id="getRefreshTokenDetail" parameterType="java.lang.String" resultType="com.immoc.bilibili.dao.domain.RefreshTokenDetail">
        select
            *
        from t_refresh_token
        where refreshToken = #{refreshToken}
    </select>
    <select id="batchGetUserInfoByUserIds" resultType="com.immoc.bilibili.dao.domain.UserInfo">
        select * from t_user_info where userId in
        <foreach collection="userIdList" item="userId" open="(" close=")" separator=","> #{userId} </foreach>
    </select>
</mapper>